/******************************************************
* BASE FONT
******************************************************/

$font-georgia: (
	family: unquote("Georgia, serif"),
	normalize-ratio: 1.00
);

/******************************************************
* ADDITIONAL FONTS
******************************************************/

// Oftentimes two fonts set to different sizes do not appear
// to be the same size. This is because the height of their
// lowercase letters is not equal. 

// A good example is Verdana. Its x-height appears 10% larger than
// Georgia. To normalize it with 60px Georgia, we need to decrease
// size by 10% (normalize-ratio: 0.90). The resulting 54px Verdana 
// will appear to be the same size as 60px Georgia.

$font-verdana: (
	family: unquote("Verdana, sans-serif"),
	normalize-ratio: 0.89
);
 
$font-feather: (
	family: unquote("'Feather'"),
	normalize-ratio: 0.95
);

/******************************************************
* FONT ROLES
******************************************************/

// For most projects I set a single fontBody and a
// fontHeading, but this may not always be appropriate.

$font-copy: $font-georgia;
$font-copy-weight: normal;

$font-heading: $font-verdana;
$font-heading-weight: bold;

$font-icon: $font-feather;
$font-icon-weight: normal;

/******************************************************
* FONT SCALE
******************************************************/

// How many sizes do you need? What should they be named?
$names-of-sizes: "smaller", "base", "larger1", "larger2", "larger3", "larger4";

// Now define your breakpoints below. For each breakpoint, we'll generate
// a scale composed of the sizes you defined above.

// Specifies the base font-size and line-heights for desktop and mobile.
// Note that this is NOT the minimum font size, rather the one optimized 
// for comfortable reading. 

// This also generates smaller-font-size by reducing the base-size by the  
// scaling ratio. This should be reserved for footnotes and secondary 
// reading experiences. Do make sure this isn't absurdly tiny though.


$responsive-font-scale: (	

	// Phone sizes
	default: (
		scale: makeFontScale(18px, 1.5, 28px, 1.35, $names-of-sizes)
	),

	// Tablet sizes and larger
	tablet: (
		media-query: "screen and (min-width: 600px)",
		scale: makeFontScale(20px, 1.6, 42px, 1.25, $names-of-sizes)
	)
); 

/******************************************************
* MIXINS
******************************************************/

@mixin _setFontSize($scale, $size-name, $normalize-ratio) {
	$font-size: map-get($scale, $size-name);
	font-size: map-get($font-size, font-size) * $normalize-ratio;
	line-height: map-get($font-size, line-height); 
}

@mixin setFontSize($font, $font-size, $breakpoint) {
	$family: map-get($font, family);
	
	$scale: map-get($responsive-font-scale, $breakpoint);
}

@mixin setResponsiveFontSize($font, $size-name) {

	$family: map-get($font, family);
	$normalize-ratio: map-get($font, normalize-ratio);

	font-family: $family;

	@each $breakpoint-name, $breakpoint-map in $responsive-font-scale {
		$scale: map-get($breakpoint-map, scale);

		@if $breakpoint-name == default {
			@include _setFontSize($scale, $size-name, $normalize-ratio);
		}

		@else {
			$media-query: map-get($breakpoint-map, media-query);
			@media #{$media-query} {
				@include _setFontSize($scale, $size-name, $normalize-ratio);
			}
		}
	}
}

 
// This is the white space above the cap height when 
// the text is highlighted divided by the font size when 
// measured. This is the space by which we want to reduce 
// the margin-top to adjust for optical spacing inconsistencies
// in larger type sizes.
$base-font-gap-ratio: .268; // 15px / 56px

$normal-margin: 12px;

/******************************************************
* TEXT COLORS
******************************************************/

$text-color-primary: rgba(#000000, 0.9);
$text-color-secondary: rgba(#000000, 0.5);
$text-color-tertiary: rgba(#000000, 0.35);
$text-color-emphasis: red;
